// Mocks generated by Mockito 5.4.6 from annotations
// in pet_finder_app_task/test/unit_test/home_repo_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pet_finder_app_task/features/home/data/data_source/home_data_source.dart'
    as _i2;
import 'package:pet_finder_app_task/features/home/domain/entities/pet_entity.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [HomeDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeDataSource extends _i1.Mock implements _i2.HomeDataSource {
  MockHomeDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.PetEntity>> getAllPets() =>
      (super.noSuchMethod(
            Invocation.method(#getAllPets, []),
            returnValue: _i3.Future<List<_i4.PetEntity>>.value(
              <_i4.PetEntity>[],
            ),
          )
          as _i3.Future<List<_i4.PetEntity>>);

  @override
  _i3.Future<List<_i4.PetEntity>> getSearchedPets({required String? query}) =>
      (super.noSuchMethod(
            Invocation.method(#getSearchedPets, [], {#query: query}),
            returnValue: _i3.Future<List<_i4.PetEntity>>.value(
              <_i4.PetEntity>[],
            ),
          )
          as _i3.Future<List<_i4.PetEntity>>);
}
